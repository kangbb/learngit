//git的一些命令
一、创建版本库：
$ mkdir learngit
$ cd learngit		//创建空目录并打开
$ git init			//把目录变成Git可以管理的仓库

二、添加文件到Git仓库/更新文件到Git仓库(在对应仓库目录下运行命令)
$ git add <file>
$ git commit -m <"extra comment"> #可以先add多个文件，再一次性提交

三、版本退回(在对应仓库目录下运行命令)
$ git status	//git仓库状态
$ git diff <file>	//查看文件最近一次做了哪些修改
$ git diff HEAD -- <file>	//查看工作区和版本库里面最新版本的区别
$ git checkout -- <file>	//撤销工作区修改
$ git reset HEAD <file>		//撤销暂存区修改，重新放回工作区
$ git rm <file>
$ git commit -m "remove <file>"	//删除文件
$ git log	//显示从最近到最远的提交日志
$ git log --pretty=oneline	//减少git log显示的信息
$ git reset --hard HEAD~1	//退回到上一个版本。HEAD~2,退回到上上个版本。以此类推。
$ git reset --hard <version ID>	//指定回到某个版本

四、添加远程库(在对应仓库目录下运行命令)
$ git remote add origin git@github.com:michaelliao/learngit.git 
//例如链接远程库https://github.com/michaelliao/learngit
$ git push -u origin master	//首次推送本地库
$ git push origin master	//后面所有本地库的推送命令 origin为远程库的名字

五、从远程库克隆(在非git仓库目录下运行命令)
$ git clone git@github.com:michaelliao/gitskills.git
////例如从远程库https://github.com/michaelliao/gitskills克隆

六、分支管理(在对应仓库目录下运行命令)
$ git branch	//查看分支
$ git branch <name>	//创建分支
$ git checkout <name>	//切换分支
$ git checkout -b <name>	//创建+切换分支
$ git merge <name>	//合并某分支到当前分支
$ git branch -d <name>	//删除分支
git branch -D <name>	//删除未合并分支

$ git merge --no-ff -m "merge with no-ff" dev	//可以显示出做过合并

$ git stash	//把当前工作现场“储藏”起来，等以后恢复现场后继续工作
$ git stash list	//显示stash列表
$ git stash apply  $ git stash drop	//恢复工作现场并删除stash
$ git stash pop	恢复工作现场并删除stash

$ git push origin <branch-name>	//从本地推送分支
$ git checkout -b <branch-name> origin/<branch-name>	//在本地创建和远程分支对应的分支
$ git branch --set-upstream <branch-name> origin/<branch-name>	//建立本地分支和远程分支的关联

七、标签管理
$ git tag <lab>	//创建标签 <lab>为标签名称
$ git tag	//查看所有标签

$ git log --pretty=oneline --abbrev-commit	//找到历史提交的commit id
$ git tag <tab> <commit ID>	//创建标签
$ git show <tab>	//查看标签具体信息
$ git tag -a <tab> -m <"comment"> <commit ID>	//用-a指定标签名，-m指定说明文字
$ git tag -s <tab> -m <"comment"> <commit ID>	//通过-s用私钥签名一个标签

$ git tag -d <lab>	//删除标签
$ $ git push origin <lab>	//推送标签
$ git push origin --tags	//一次性推送全部尚未推送到远程的本地标签
//标签推送后的删除方式
$ git tag -d <lab>	//删除本地标签
$ $ git push origin :refs/tags/<lab>	//删除远程标签